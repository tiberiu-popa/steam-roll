#include <vector>
#include <utility>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

#define MAX_N 50

using namespace std;

class ScotlandYard {

private:
	vector< pair<unsigned short, unsigned short> > pair_edges[MAX_N][MAX_N];
	int color[MAX_N][MAX_N];
	int dp[MAX_N][MAX_N];
	int graph[MAX_N][MAX_N];
	bool final[MAX_N];

public:

	bool connected(unsigned int x, unsigned int y, unsigned int p, unsigned int q)
	{
		return (graph[x][p] & graph[y][q]) != 0 ||
			(graph[x][q] & graph[y][p]) != 0 ||
			(graph[x][p] & graph[x][q]) != 0 ||
			(graph[y][p] & graph[y][q]) != 0;
	}

	int dfs(unsigned int x, unsigned int y, unsigned int n)
	{
		pair<unsigned int, unsigned int> entry(x, y);
		int max_val = -1;
		color[x][y] = 1;
		for (vector< pair<unsigned short, unsigned short> >::iterator it = pair_edges[x][y].begin(); it != pair_edges[x][y].end(); ++it) {
			unsigned int p = it->first;
			unsigned int q = it->second;
			if (color[p][q] == 0) {
				int val = dfs(p, q, n);
				if (val != 0)
					return val;
			} else if (color[p][q] == 1) {
				return -1;
			}
			if (dp[p][q] > max_val)
				max_val = dp[p][q];
		}
		color[x][y] = 2;

		if (max_val < 0) {
			if (!final[x] || !final[y])
				++max_val;
		}
		dp[x][y] = max_val + 1;

		return 0;
	}

	int maxMoves(vector <string> taxi, vector <string> bus, vector <string> metro)
	{
		unsigned int n = (unsigned int) taxi.size();

		fill(final, final + n, true);

		for (unsigned int i = 0; i < n; i++)
			for (unsigned int j = 0; j < n; j++)
				if (taxi[i][j] == 'Y' || bus[i][j] == 'Y' || metro[i][j] == 'Y') {
					final[i] = false;
					break;
				}

		for (unsigned int i = 0; i < n; i++)
			for (unsigned int j = 0; j < n; j++) {
				graph[i][j] = 0;
				if (taxi[i][j] == 'Y')
					graph[i][j] |= 1 << 0;
				if (bus[i][j] == 'Y')
					graph[i][j] |= 1 << 1;
				if (metro[i][j] == 'Y')
					graph[i][j] |= 1 << 2;
			}

		for (unsigned int i = 0; i < n; i++)
			for (unsigned int j = i; j < n; j++) {
				pair_edges[i][j].clear();
			}

		for (unsigned int i = 0; i < n; i++)
			for (unsigned int j = i; j < n; j++) {
				for (unsigned int k = 0; k < n; k++) {
					for (unsigned int l = k + 1; l < n; l++)
						if (connected(i, j, k, l)) {
							pair_edges[i][j].push_back(pair<unsigned short, unsigned short>(k ,l));
						}
				}
			}

		int answer = 0;
		for (unsigned int k = 0; k < n; k++)
			fill(color[k], color[k] + n, 0);
		for (unsigned int i = 0; i < n; i++)
			for (unsigned int j = i; j < n; j++)
				if (color[i][j] == 0) {
					int ret = dfs(i, j, n);
					if (ret != 0) {
						answer = -1;
						i = n;
						break;
					}
					if (dp[i][j] > answer)
						answer = dp[i][j];
				}

		return answer;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, vector <string> p0, vector <string> p1, vector <string> p2, bool hasAnswer, int p3) {
	cout << "Test " << testNum << ": [" << "{";
	for (int i = 0; int(p0.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p0[i] << "\"";
	}
	cout << "}" << "," << "{";
	for (int i = 0; int(p1.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p1[i] << "\"";
	}
	cout << "}" << "," << "{";
	for (int i = 0; int(p2.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p2[i] << "\"";
	}
	cout << "}";
	cout << "]" << endl;
	ScotlandYard *obj;
	int answer;
	obj = new ScotlandYard();
	clock_t startTime = clock();
	answer = obj->maxMoves(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p3 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;
	
	vector <string> p0;
	vector <string> p1;
	vector <string> p2;
	int p3;
	
	{
	// ----- test 0 -----
	string t0[] = {"NYN","NNY","NNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNN","NNN","NNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNN","NNN","NNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 2;
	all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 1 -----
	string t0[] = {"NYY","NNN","NNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNN","NNN","NNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNN","NNN","NNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 1;
	all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 2 -----
	string t0[] = {"NYYY","YNYY","YYNY","YYYN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNNN","NNNN","NNNN","NNNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNNN","NNNN","NNNN","NNNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = -1;
	all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 3 -----
	string t0[] = {"NNY","NNY","NNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NYN","NNY","NNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNN","NNN","YNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 2;
	all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 4 -----
	string t0[] = {"NNN","YNY","NNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNN","YNN","YNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNN","NNN","YYN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = -1;
	all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 5 -----
	string t0[] = {"NNNNYNNNYY","NNYNNYYYYY","NNNNNNNNNN","YYNNYYNNNY","NNYNNNNNNN","YNYNYNNNYN","NNYNYNNNYN","NNNNNNYNNN","NNNNNNNNNN","NNNNNNYNNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNYNNNYNNY","YNYNNYYNYY","NNNNNNNNNN","YNYNNYNYNY","NNYNNNNNYN","YNYNYNYNYN","NNYNNNNNNY","YNYNNNNNNN","NNNNNNNNNN","NNYNYNNNNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNNNNNNYNN","YNYNNNNNYN","NNNNNNNNNN","NYNNYNNNYY","NNYNNNNNNN","YNYNNNNNYY","NNNNYNNNYN","NNYNNNYNNN","NNNNNNNNNY","NNYNYNNNNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 21;
	all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 6 -----
	string t0[] = {"NNNNNNNNNNYNNNNNNNNNNNNNNNNNNN","NNYYYYYYYNNYNNNNNYNNNNNYYNYYYY","NNNYYYNNYNNNNNYNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNYYNYNNNNNYYNYYNYYNNNNYNNYNYY","NNNYNNNNNNNNNNNNNNNNNNNNNYNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNYNNNNNNNNNNYNNNNNNNNNNYNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNYNNNNYNNNNNNNNNNNNNNNYN","YNNNNNNNNNNNNNNNNNYNNNNNNNNNNN","NNNNYNYYNYYYNNNYYYYYYYNYYNYYNN","NNNYNNNNNNNNNNNNNNNNNNNNNYNNNN","NNNNYNNNNNNNNNYNNNNNNNNNNNNNNN","NNNNYNNYNNNNNNNNNNNNNNNNNNNNYN","NNNYYNNYYYYNYNNNNNNNNNNYNNYYYY","NNNYNNNNNNNNNNNNNNNNNNNNNNNNNN","YYYNYNNNYNNYNNYNNYNNYNNNNNNNYN","NNNNNNYNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNYNNNNNNNNNNNNNNNNNNNNN","YNYYNNYNYYYNNYNYYYYNYYNYNNYYYN","YNNYYNNNNNNNNNYNNNNNNNNNNNNYNY","YNNYYYNYYNNYYNYYYYYNYNNNNYYYYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNNYNYNYNNNNNNNYYNYNNYNYNNNYYN","NNNNNNNNNNNNNNNNYNNNNNNNNNNNNN","NNNYNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNYNNNNNNNNNNNNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNNNNNNNYNNNNNNNNNNNNNNNNNNNNN","YNYYYNYYYNYYYNNNYYNNYNNNYNNYYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNYNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNYNYYNYNYYNYNNYYYNNNYNNNNYNNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNYNNNNNNNNYNNNNNNNNNNNNNNNNN","NNNNYYNNNNNNNNYNNNNNNNNNNNNYNN","NNNNNNNNNYNNNNNNNNNNNNNNNNNNNN","NNNNYYNYNNYNNNYNNNNNNNNNNNNNNY","NNNNYNNYNNNNNNNYNNNNNNNNNNNNNN","NYYYNNNNYYNNNNNYYYNYYNNNYYNYYN","NNNNYNNNNNNNNNNNNNNNNNNNNNNNNN","NNNYYNNNNNNNNNNNNNNNNNNNNYNNNN","NNNNYNNNNNNNNNNNNNNNNNNNNYNNNN","NNYNNNNYYNNNYNNYNNNNNYNNNYNYYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNNNNNYNYNNNYNYNYYNNYYNYYNNYNY","YNNNYYNYNYNNNNNYNNNNNNNYNYNNNN","NNNNNNNNNYNNNNNNNNNNNNNNNNNNNN","NYYYYNYYNNNYNYYYNYYYYYNNNNNYNY","NNNNNNNNNNNYNNNNNNNNNNNNNNNNYN","NNYNNNYNNYNYYNYYYYYNYYNYNNNNYY","NNNNNNNNNNNNNNYNNNNNNNNNNNNNNN","YNYYYYNNYNYNYNYNYNYNNNNYNYNNYN","NNNNYNNYNNNNNNYYNNNNNNNNNNNNNN","NNNYNNNNNNYNNNNNNNNNNNNNNNNNNN","NNNNYNNYNNNNNNNNNNNNNNNNNNNNNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNNNNYNNNNYNNNNNNNNNNNNNNNNNNN","NNYYNNNNYNNYNNYNYNNNYYNNNYNNNN","NNNNYNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNY","NNNYYNNNNNYNNNNNNNNNYNNNNYNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNYNNNNNNNNNNNNNNNNNNNNNNNY","NNNNYNNNNNNNNNNNNNYNNNNNNNNNNN","NNNYNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNNYNNYNNNYYYNYNYNNNYYNNNNYYNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNYNNNNNNNNNNNNNNNNNNNNN","NNNYNYNNYNNNNNNYNNNNNNNNNNNNNN","YNNYNNNNYNYYYNYNNNNNNYNNNNYYNN","NNNNNNNNNNYNNNNNNNNNNYNNNNNNNN","YNNNNNNNNNNYNNYYYNNNNYNNYYNNYY","NNYNYNNYNNNYYNNNYNNNNNNNNNYYNN","NNNYYNNNNNNNNNNNNNNNNNNNNNNYNN","YYNNNNYYNYYYYNNYYNYNNNNYNNNYNY","NNNNNYNNNNYNNNNYNNNNNYNNNNNNNN","YNNNNYNYYNNYNNNYYYNNNYNNNNYNYN","NNYNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNNNYNNNYNYNYNYNNNYNNNNYNYNYYY","NNNYNYNYNNNNNNYNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNYNNNNNN","NNNNYNNNNNNNNNNNNNNNNNNNNNNNNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 67;
	all_right = KawigiEdit_RunTest(6, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	{
	// ----- test 7 -----
	string t0[] = {"NNNNNNNYNNNNNYNNNNNNNYNNNNNNNNYNNNNYNNNNNNNNN","NNNNYNYNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNYN","NNNNNNNYNNNNNNNNNNNNNNYNNNNNNYYNNNNYNNYNNNYYN","YYNNYNNNYNYNYNNYYYYNNNYYYNNNYYYYNYYNYYYYYNYYY","NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YNNNYNNYNNNNNNNNYNNNNNNNNNYNYYNYNNYNYNYNNNYNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNYN","NNNNNNYNNNNNNNNNNNNNNYNNNNNNNNYNNYYNNNNNNNNNN","NNNNNNYYNNNNNNNNNNNNNNNYYNNNNNNNNNNNNYNNNNNNN","NNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNNYNYNNNNYNNYY","NYYYYYNYYNNNYNYNNNYNYYNYNNYYNYNNYNNYYYNYYNYNN","YNNNNNYNYNNNNNNNNYYYNYYYYNNNNNNYNNNYYNNNYNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN","NNNNYNYNYNYNNNNNYYNYYNNNNNYYNNYYNYNNYYNNYNYNY","NNNNNNNYNNNNNYNNNNNNNNYNNNNNNNNNNNYNNNNNNNNYN","YNYNYNNYYYNNNNNNNYYYNYNNYNNNNYYYNYNYNNYYYNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN","NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNY","NNNNNNYYNNNNNYNNNNNNNNNNNNNNNNNNNYNYNNNNNNNNY","YNNYYNNYYYYNNNNNYNNNNYYNNNYYNYNNNYNYYYNY"
			"NNYNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYYNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNYNNNYNN","NNNNNNYNNNNNNNNNNNNNNYYNNNNNNNYNNNYNNNNNNNNNY","NYYYNYNYNYYYYYYYYYYNYYNNYNYNYYYYYNNYNYYNNYYYN","NNNYYNYNYNNNYNNYYNYNNYNYNNNNYYYYNNYYYNYYNNNYY","YYNNNNNNNYNNYNNNYYYYNYYNNNNNYNNYNNYYYYNYYNNYY","NNNNNNNYNNNNNNNNNNNYNYNNNNNNNNNNNNYYNNNNNNNNY","NNNNNNYNNNNNNNNNNNNNNYYNNNNNNNYNNYNNNNYNNNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNYNNNNYNNNNNNNYNNYYYNNNNNNNNN","YNYNNNYNNNYNNNNNYYNYNNYYNNYNYYNYNYYYYYNNYNNNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNN","NNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYYNNNNNYNNNNNNNNYNNNNNNNYNNYYNNNNNNNNYN","NNNNNNYNNNNNNNNNNNNNNYYNNNNNNNNNNYNYNNNNNNNYN","NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNYNNNYNYNNNNNNYN","YYNNYYNNNNYYYNYYNNNNNYNNNNYNYNNYN"
			"NNNNNNYYNYNY","NNNNNNYNNNNNNYNNNNNNNNNNNNNNNNNNNYYYNNNNNNNNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
			p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
	string t1[] = {"NNNNNNNYYNNNNYNNNNNNNNYNNNNNNNYNNNYNNNNNNNNNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNYNNNNNNNYNNNNNNNNNNNNNNYNNYYNNNNNNNNNN","YYYNYNYNYYYNYNNYYNYYNYYYYNNNYNYYNYNYYNNNNNNNY","NNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YYYYNNNYNNNNNNNYYYYYNYNYYNYNNNYYNNYYYYNNNNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNYNNNNNNNNYNNNNNNYNNNNNYN","YNNNNNNNYNNNNNNNNNNYNYYNNNNNNNYNNYYYNYNNNNNNY","NNNNNNNNNNNNNNNNNNNNNNNYNNNNNNYNNNYYNNNNNNNYY","NNNNNYNYNYYNYYYNYYNNYNNYNNNNNNNYYNYYNYNNNNNYY","YYYNYNNYNNNNNNNYNYYNNYYYNNNNYYNYNYNYYYNYNNYYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YYNYNNYNNYNNNYNYNNNNYYNNYNYYNYNNNNYYNNYNNNYNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNN","YNNNYNYNYNYNYNNYNYNYNNNYYNNNNNNYNYYYNNYYNNNNN","NNNNNNYNNNYNNYNNNNNNNYYNNNNNNNNNNNNNNNYNNNYYY","NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNYNNNNNNNNNNNNNNNNYNNNYYNNNNNNNNY","YYNNYYNNNNNNYYNYNNNNNYYNYNNNNNYYYYNNNNYN"
			"YNNNY","NNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNNNNNYNNNNNNYNNNNYNNNNNNNNNYY","YNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNYNYNNNNNNNNN","YNNNNNYYNNNYNYYYNYNYYNYYNNYYNNNNNYYNYYNNYYNNN","YYNYYNNYYYYNNYNYYYNYNYYNYNNNNNNNNNYNYNNYNNNYY","YNYYNYYNNYNNYYNNYYNNNNNNNNNNYYNYNYYYNNYYYNYNY","NNNNNNNNNNNNNYNNNNYNNNYNNNNNNNYNNNNYNNNNNNNYN","YNNNNNYYNNNNNNNNNNNYNYNNNNNNNNNNNYNYNNNNNNNNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNYNNNNNNNNNNYNNNNNNNNNNNNNYNNNNNNNNNNN","YNYYYYNYNYNNYNNNYNYYNYNNYNNNYNYNNNYNYYNYNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNYN","NNYNNNYYNNNNNYNNNNNNNYNNNNNNNNYNNYYNNNNNNNNYY","NNNNNNNNNNNNNNNNNNNNNYYNNNNNNNYNNYNYNNNNNNNNY","NNNNNNNYNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNYNNNNNNNYNNNNNNNNNYNYNYNNNNNNNNY","NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNYYNNNNNNNNY","YNYYNYYNNYYNYNNNNYNYYNYNYNYNNYNYN"
			"NNNYYNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
			p1.assign(t1, t1 + sizeof(t1) / sizeof(t1[0]));
	string t2[] = {"NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNN","NNNNNNYYYNNNNYNNNNNNNNNNNNNNNNYNNYNYNNNNYNNNY","NNNNNNNNYNNNNNNNNNNNNNNNNNNNNNYNNYNYNNNNNNNYN","YYYNNNNYYNNNYNNYNNNYNYYNYNNNNYYYNYYYNNYYNNNNY","NNNNNNYYNNNNNYNNNNNNNNNNNNNNNYNNNYNYNNYNNNNNN","YNNYNNNNNNYNNYNYYNNNNYNYYNYNYYNNNNYNYYYNNNNNN","NNNNNNNNNNNNNYNNNNNNNNYNNNNNNNNNNNYNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNYNNNYNNNNNNNNYN","NNNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNYNNNNNNNYYN","YNNNNNYYNNNNNYNNNNYNNYYNYNNNNYNNNNNNNNNNNNNNY","NYNNNNNNNNNNNYNNNNNNNNYNNNNNNNYNNNNNNNNNNNNYN","NYYNYYYNNYYNNYNYYNNNNYYNNNYYYNNNYYNNYYYYYNYYY","YYYNNNNYNNYNNNNYNYNNNNYYNNNNYNYYNYNYNYNNNNYNY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","YYYNYYYNYYNNYYNYNYNYYNYYYNYYYYNNYYYNNNNYYNYYN","NNNNNNNYNNNNNNNNNNNNNNYNYNNNNNNNNYNNNNNNNNNNN","YNYNYNNNYNYNNNNYNYYNNNYNNNNNNNYNNYYNYYYNYNYNY","YNNNNNYNNYNNNNNNNNNNNNNNYNNNNNNNNYYYNNNNNNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNYNNNNNNNNYNNNNNNNYNNYNYNNNNNNYYN","YYYNYNYYYYYNYNNYYNYYNNYNNNYNYNNNYNYNNYYY"
			"NNYYN","NNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNYY","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYYNNNNNNNNNNNNNNYNNNNNNYNNNNNNNNNNNNNNN","YNNNNNYYNNNNNYNNNNYNNYYNNNNNNNNNNNNYNNNNNNNNY","YNYNYNYNNYNYNNYYYNYNNYNYYNYNNYNYYYYNYNNYYYYNN","NNNNNNYNNNNNYYNNNYNYNYNNYNNNYYYYNNNYYYYYYNNYY","NNNNNYYYNYNNNNNYNNNYNNNYNNYNYYNNNNNNNYNNYNYNY","NYNNNNYNNNNNNNNNNNYNNYNNNNNNNNNNNYYNNNNNNNNYY","NNNNNNNYNNNNNYNNNNNNNNNNNNNNNNYNNNYNNNNNNNNYN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNNYNNYYNNNNNNYNNNYNYNNNNNNYNY","NNYYYNNNNYNNYNNNYYNYNNYNNNNYYYYYNYNNNNNNNNNYY","NNNNNNYNNNNNNNNNNNNNNNYNNNNNNNNNNNYNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNYNNNNNNNNNNNNNNNNNNNNNNNYNNNNNNNNNNNNYY","NNYNNNYNNNNNNYNNNNNNNYNNNNNNNNYNNNYYNNNNNNNYY","NNNNNNNNNNNNNYNNNNNNNNYNNNNNNNYNNNNNNNYNNNYYN","NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNYNNNNNYNNNNNYNNNNNNNNNNYNNYNNNNNNNNNYN","NNNNNNYNNNNNNYNNNNNNNNYNNNNNNNYNNNNYNNNNNNNYN","YYNYNYYNYNYYYYNYNYNNNNNYYNYNYYYNN"
			"NNYYNYNNNYNN","NNNNNNNNNNNNNNNYNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN"};
			p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
	p3 = 78;
	all_right = KawigiEdit_RunTest(7, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}
	
	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
