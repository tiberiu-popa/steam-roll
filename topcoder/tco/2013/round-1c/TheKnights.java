import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheKnights
{
	private double getCounter(int numNeighbours, double total) {
		return numNeighbours * (numNeighbours + 1) + 2 * (numNeighbours + 1) * (total - numNeighbours - 1);
	}
	
	private long square(long x) {
		return x * x;
	}

	public double find(int n, int a, int b)
	{
		double result = 0.0;
		Set<Integer> coordinates = new TreeSet<Integer>();
		coordinates.add(0);
		if (a < n)
			coordinates.add(a);
		if (b < n)
			coordinates.add(b);
		if (n - a > 0)
			coordinates.add(n - a);
		if (n - b > 0)
			coordinates.add(n - b);
		coordinates.add(n);
		double total = square(n);
		List<Integer> coordList = new ArrayList<Integer>(coordinates);
		for (int i = 1; i < coordList.size(); i++) {
			int lx = coordList.get(i - 1);
			int rx = coordList.get(i);
			for (int j = 1; j < coordList.size(); j++) {
				int ly = coordList.get(j - 1);
				int ry = coordList.get(j);
				int numNeighbours = 0;
				if (lx >= a && ly >= b)
					numNeighbours++;
				if (lx >= a && ly + b < n)
					numNeighbours++;
				if (lx + a < n && ly >= b)
					numNeighbours++;
				if (lx + a < n && ly + b < n)
					numNeighbours++;
				if (a != b) {
					if (lx >= b && ly >= a)
						numNeighbours++;
					if (lx >= b && ly + a < n)
						numNeighbours++;
					if (lx + b < n && ly >= a)
						numNeighbours++;
					if (lx + b < n && ly + a < n)
						numNeighbours++;
				}
				double xr = (double) (rx - lx) / n;
				double yr = (double) (ry - ly) / n;
				double counter = getCounter(numNeighbours, total);
				result += xr * yr * ((double) counter / (total - 1));
			}
		}
		return result;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, double p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		TheKnights obj;
		double answer;
		obj = new TheKnights();
		long startTime = System.currentTimeMillis();
		answer = obj.find(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p3 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p3));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		double p3;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 1;
		p2 = 1;
		p3 = 3.3333333333333335D;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 47;
		p1 = 7;
		p2 = 74;
		p3 = 2.0D;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 3;
		p1 = 2;
		p2 = 1;
		p3 = 4.888888888888889D;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 9999;
		p1 = 999;
		p2 = 99;
		p3 = 16.25885103191273D;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 10;
		p1 = 1;
		p2 = 6;
		p3 = 7.636363636363637D;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 999999999;
		p1 = 281698010;
		p2 = 168402490;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, false, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
